{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteTodo as _deleteTodo, editTodo as _editTodo } from \"../../../redux/action/addTodo.action\";\n\nvar TodoContainer = function TodoContainer(_ref) {\n  var todo = _ref.todo,\n      idx = _ref.idx,\n      deleteTodo = _ref.deleteTodo,\n      editTodo = _ref.editTodo,\n      selected = _ref.selected,\n      text = _ref.text;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return editTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, selected === id ? text : todo), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      return deleteTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"x\"));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteTodo: function deleteTodo(key) {\n      return dispatch(_deleteTodo(key));\n    },\n    editTodo: function editTodo(key) {\n      return dispatch(_editTodo(key));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var text = _ref2.text,\n      selected = _ref2.selected;\n  return {\n    text: text,\n    selected: selected\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","connect","deleteTodo","editTodo","TodoContainer","todo","idx","selected","text","id","cursor","mapDispatchToProps","dispatch","key","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,QAAQ,IAARA,SAArB,QAAqC,sCAArC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAyD;AAAA,MAAtDC,IAAsD,QAAtDA,IAAsD;AAAA,MAAhDC,GAAgD,QAAhDA,GAAgD;AAAA,MAA3CJ,UAA2C,QAA3CA,UAA2C;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBI,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7E,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAML,QAAQ,CAACM,EAAD,CAAd;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,QAAQ,KAAKE,EAAb,GAAkBD,IAAlB,GAAyBH,IAA5D,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACO,EAAD,CAAhB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAQD,CATD;;AAWA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCV,IAAAA,UAAU,EAAE,oBAAAW,GAAG;AAAA,aAAID,QAAQ,CAACV,WAAU,CAACW,GAAD,CAAX,CAAZ;AAAA,KADuB;AAEtCV,IAAAA,QAAQ,EAAE,kBAAAU,GAAG;AAAA,aAAID,QAAQ,CAACT,SAAQ,CAACU,GAAD,CAAT,CAAZ;AAAA;AAFyB,GAAL;AAAA,CAAnC;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGN,IAAH,SAAGA,IAAH;AAAA,MAASD,QAAT,SAASA,QAAT;AAAA,SAAyB;AAC/CC,IAAAA,IAAI,EAAJA,IAD+C;AAE/CD,IAAAA,QAAQ,EAARA;AAF+C,GAAzB;AAAA,CAAxB;;AAIA,eAAeN,OAAO,CACpBa,eADoB,EAEpBH,kBAFoB,CAAP,CAGbP,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteTodo, editTodo } from \"../../../redux/action/addTodo.action\";\n\nconst TodoContainer = ({ todo, idx, deleteTodo, editTodo, selected, text }) => {\n  return (\n    <div className='Todo'>\n      <div onClick={() => editTodo(id)}>{selected === id ? text : todo}</div>\n      <div style={{ cursor: \"pointer\" }} onClick={() => deleteTodo(id)}>\n        x\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: key => dispatch(deleteTodo(key)),\n  editTodo: key => dispatch(editTodo(key))\n});\n\nconst mapStateToProps = ({ text, selected }) => ({\n  text,\n  selected\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoContainer);"]},"metadata":{},"sourceType":"module"}