{"ast":null,"code":"import _regeneratorRuntime from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addNewTodo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removeTodo),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateTodo),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(todosWatcher);\n\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { actionTypes } from '../constants';\nimport { actions } from '../store/actions';\n\nfunction addNewTodo(_ref) {\n  var payload, callback;\n  return _regeneratorRuntime.wrap(function addNewTodo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload, callback = _ref.callback;\n          _context.prev = 1;\n          _context.next = 4;\n          return put(actions.CREATE_TODO.SUCCESS(payload));\n\n        case 4:\n          _context.next = 8;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](1);\n\n        case 8:\n          _context.prev = 8;\n          callback && typeof callback === 'function' && callback();\n          return _context.finish(8);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 6, 8, 11]]);\n}\n\nfunction removeTodo(_ref2) {\n  var payload, callback;\n  return _regeneratorRuntime.wrap(function removeTodo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload, callback = _ref2.callback;\n          _context2.prev = 1;\n          console.log(payload);\n          _context2.next = 5;\n          return put(actions.REMOVE_TODO.SUCCESS(payload));\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 11;\n          return put(actionTypes.FETCH_TODOS_FAILURE, _context2.t0);\n\n        case 11:\n          _context2.prev = 11;\n          callback && typeof callback === 'function' && callback();\n          return _context2.finish(11);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 7, 11, 14]]);\n}\n\nfunction updateTodo(_ref3) {\n  var payload, callback;\n  return _regeneratorRuntime.wrap(function updateTodo$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload, callback = _ref3.callback;\n          _context3.prev = 1;\n          console.log(payload);\n          _context3.next = 5;\n          return put(actions.UPDATE_TODO.SUCCESS(payload));\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 11;\n          return put(actionTypes.FETCH_TODOS_FAILURE, _context3.t0);\n\n        case 11:\n          _context3.prev = 11;\n          callback && typeof callback === 'function' && callback();\n          return _context3.finish(11);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 7, 11, 14]]);\n}\n\nexport default function todosWatcher() {\n  return _regeneratorRuntime.wrap(function todosWatcher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(actionTypes.CREATE_TODO.REQUEST, addNewTodo);\n\n        case 2:\n          _context4.next = 4;\n          return takeLatest(actionTypes.REMOVE_TODO.REQUEST, removeTodo);\n\n        case 4:\n          _context4.next = 6;\n          return takeLatest(actionTypes.REMOVE_TODO.REQUEST, updateTodo);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/store/sagas.js"],"names":["addNewTodo","removeTodo","updateTodo","todosWatcher","call","put","takeLatest","actionTypes","actions","payload","callback","CREATE_TODO","SUCCESS","console","log","REMOVE_TODO","FETCH_TODOS_FAILURE","UPDATE_TODO","REQUEST"],"mappings":";;oDAIUA,U;qDAUAC,U;qDAUAC,U;qDAUeC,Y;;AAlCzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,SAAUR,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBS,UAAAA,OAAvB,QAAuBA,OAAvB,EAAgCC,QAAhC,QAAgCA,QAAhC;AAAA;AAAA;AAGQ,iBAAML,GAAG,CAACG,OAAO,CAACG,WAAR,CAAoBC,OAApB,CAA4BH,OAA5B,CAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOQC,UAAAA,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAAhC,IAA8CA,QAAQ,EAAtD;AAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUT,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBQ,UAAAA,OAAvB,SAAuBA,OAAvB,EAAgCC,QAAhC,SAAgCA,QAAhC;AAAA;AAEQG,UAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAFR;AAGQ,iBAAMJ,GAAG,CAACG,OAAO,CAACO,WAAR,CAAoBH,OAApB,CAA4BH,OAA5B,CAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMJ,GAAG,CAACE,WAAW,CAACS,mBAAb,eAAT;;AALR;AAAA;AAOQN,UAAAA,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAAhC,IAA8CA,QAAQ,EAAtD;AAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUR,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBO,UAAAA,OAAvB,SAAuBA,OAAvB,EAAgCC,QAAhC,SAAgCA,QAAhC;AAAA;AAEQG,UAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAFR;AAGQ,iBAAMJ,GAAG,CAACG,OAAO,CAACS,WAAR,CAAoBL,OAApB,CAA4BH,OAA5B,CAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKQ,iBAAMJ,GAAG,CAACE,WAAW,CAACS,mBAAb,eAAT;;AALR;AAAA;AAOQN,UAAAA,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAAhC,IAA8CA,QAAQ,EAAtD;AAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUP,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMG,UAAU,CAAEC,WAAW,CAACI,WAAZ,CAAwBO,OAA1B,EAAmClB,UAAnC,CAAhB;;AADW;AAAA;AAEX,iBAAMM,UAAU,CAAEC,WAAW,CAACQ,WAAZ,CAAwBG,OAA1B,EAAmCjB,UAAnC,CAAhB;;AAFW;AAAA;AAGX,iBAAMK,UAAU,CAAEC,WAAW,CAACQ,WAAZ,CAAwBG,OAA1B,EAAmChB,UAAnC,CAAhB;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { actionTypes } from '../constants';\nimport { actions } from '../store/actions';\n\nfunction* addNewTodo({ payload, callback }) {\n    try {\n        // Call to BE ->\n        yield put(actions.CREATE_TODO.SUCCESS(payload));\n    } catch (err) {\n        // TODO\n    } finally {\n        callback && typeof callback === 'function' && callback()\n    }\n}\nfunction* removeTodo({ payload, callback }) {\n    try {\n        console.log(payload)\n        yield put(actions.REMOVE_TODO.SUCCESS(payload));\n    } catch (err) {\n        yield put(actionTypes.FETCH_TODOS_FAILURE, err)\n    } finally {\n        callback && typeof callback === 'function' && callback()\n    }\n}\nfunction* updateTodo({ payload, callback }) {\n    try {\n        console.log(payload)\n        yield put(actions.UPDATE_TODO.SUCCESS(payload));\n    } catch (err) {\n        yield put(actionTypes.FETCH_TODOS_FAILURE, err)\n    } finally {\n        callback && typeof callback === 'function' && callback()\n    }\n}\nexport default function* todosWatcher() {\n    yield takeLatest (actionTypes.CREATE_TODO.REQUEST, addNewTodo)\n    yield takeLatest (actionTypes.REMOVE_TODO.REQUEST, removeTodo)\n    yield takeLatest (actionTypes.REMOVE_TODO.REQUEST, updateTodo)\n}"]},"metadata":{},"sourceType":"module"}