{"ast":null,"code":"import _slicedToArray from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport InputField from \"../InputField/InputField\";\n\nvar TodoContainer = function TodoContainer(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      toggleFieldStatus = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var toggleField = function toggleField() {\n    toggleFieldStatus(function (isInput) {\n      return !isInput;\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    dispatch(actions.REMOVE_TODO.REQUEST(props.id, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, isInput ?\n  /*#__PURE__*/\n  // <Formik\n  //     {...FORM}\n  //     initialValues={\n  //         { text }\n  //     }\n  //     onSubmit={handleSubmit}\n  // >\n  //     {() => {\n  //         return <Form>\n  //             <Field type=\"text\" name=\"text\" />\n  //         </Form>\n  //     }}\n  // </Formik>\n  React.createElement(InputField, Object.assign({}, props.todo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \" \", props.text, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeleteTodo\",\n    onClick: deleteTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \" X \"));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useState","useDispatch","actions","InputField","TodoContainer","props","isInput","toggleFieldStatus","dispatch","toggleField","deleteTodo","REMOVE_TODO","REQUEST","id","todo","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,kBACUL,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACpBM,OADoB;AAAA,MACXC,iBADW;;AAE3B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBF,IAAAA,iBAAiB,CAAC,UAAAD,OAAO;AAAA,aAAI,CAACA,OAAL;AAAA,KAAR,CAAjB;AACH,GAFD;;AAIA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBF,IAAAA,QAAQ,CAACN,OAAO,CAACS,WAAR,CAAoBC,OAApB,CAA4BP,KAAK,CAACQ,EAAlC,EAAsC,YAAM,CACpD,CADQ,CAAD,CAAR;AAEH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMP,OAAO;AAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAC,UAAD,oBAAgBD,KAAK,CAACS,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdK,gBAgBL;AAAK,IAAA,OAAO,EAAEL,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BJ,KAAK,CAACU,IAAnC,MAjBR,eAoBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEL,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApBJ,CADJ;AAwBH,CApCD;;AAsCA,eAAeN,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\nimport { actions } from \"../../store/actions\";\nimport InputField from \"../InputField/InputField\";\n\n\nconst TodoContainer = props => {\n    const [isInput, toggleFieldStatus] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleField = () => {\n        toggleFieldStatus(isInput => !isInput)\n    }\n\n    const deleteTodo = () => {\n        dispatch(actions.REMOVE_TODO.REQUEST(props.id, () => {\n        }))\n    };\n    return (\n        <div className='Todo'>\n            { isInput ?\n                // <Formik\n                //     {...FORM}\n                //     initialValues={\n                //         { text }\n                //     }\n                //     onSubmit={handleSubmit}\n                // >\n                //     {() => {\n                //         return <Form>\n                //             <Field type=\"text\" name=\"text\" />\n                //         </Form>\n                //     }}\n                // </Formik>\n                <InputField {...props.todo} />\n                :\n                <div onClick={toggleField}> {props.text} </div>\n            }\n\n            <div className='DeleteTodo' onClick={deleteTodo}> X </div>\n        </div >\n    );\n};\n\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}