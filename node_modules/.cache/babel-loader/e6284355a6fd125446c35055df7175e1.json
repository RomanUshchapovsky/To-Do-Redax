{"ast":null,"code":"import _slicedToArray from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form, Field } from 'formik';\nimport { actions } from \"../../store/actions\";\nimport { FORM } from '../../constants/formHelper';\n\nvar TodoContainer = function TodoContainer(_ref) {\n  var text = _ref.text,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      toggleFieldStatus = _useState2[1]; // const [text,] = useState()\n\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var text = _ref2.text;\n    dispatch(actions.UPDATE_TODO.REQUEST({\n      text: text,\n      id: id\n    }, function () {\n      toggleField();\n    }));\n  };\n\n  var toggleField = function toggleField() {\n    return toggleFieldStatus(function (isInput) {\n      return !isInput;\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    dispatch(actions.REMOVE_TODO.REQUEST(id, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, isInput ? /*#__PURE__*/React.createElement(Formik, Object.assign({}, FORM, {\n    initialValues: {\n      text: text\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), function () {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleField // onChange={changeTodoItem}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \" \", text, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeleteTodo\",\n    onClick: deleteTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \" X \"));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useEffect","useState","useDispatch","Formik","Form","Field","actions","FORM","TodoContainer","text","id","isInput","toggleFieldStatus","dispatch","handleSubmit","UPDATE_TODO","REQUEST","toggleField","deleteTodo","REMOVE_TODO"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AAGA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCT,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC7BU,OAD6B;AAAA,MACpBC,iBADoB,kBAEpC;;;AAEA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,YAAY,GAAG,SAAfA,YAAe,QAAY;AAAA,QAAVL,IAAU,SAAVA,IAAU;AAC7BI,IAAAA,QAAQ,CAACP,OAAO,CAACS,WAAR,CAAoBC,OAApB,CAA4B;AAAEP,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,EAAE,EAAFA;AAAR,KAA5B,EAA0C,YAAM;AACrDO,MAAAA,WAAW;AACd,KAFQ,CAAD,CAAR;AAGH,GAJD;;AAMA,MAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAML,iBAAiB,CAAC,UAAAD,OAAO;AAAA,aAAI,CAACA,OAAL;AAAA,KAAR,CAAvB;AAAA,GAApB;;AAEA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,QAAQ,CAACP,OAAO,CAACa,WAAR,CAAoBH,OAApB,CAA4BN,EAA5B,EAAgC,YAAM,CAC9C,CADQ,CAAD,CAAR;AAEH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,OAAO,gBACL,oBAAC,MAAD,oBACQJ,IADR;AAEI,IAAA,aAAa,EACT;AAAEE,MAAAA,IAAI,EAAJA;AAAF,KAHR;AAKI,IAAA,QAAQ,EAAEK,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOK,YAAM;AACH,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAGH,GAXL,CADK,gBAeL;AAAK,IAAA,OAAO,EAAEG,WAAd,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGGR,IAHH,MAhBR,eAsBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAES,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAtBJ,CADJ;AA0BH,CA5CD;;AA8CA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form, Field } from 'formik';\n\n\nimport { actions } from \"../../store/actions\";\nimport { FORM } from '../../constants/formHelper';\n\n\nconst TodoContainer = ({ text, id }) => {\n    const [isInput, toggleFieldStatus] = useState(false)\n    // const [text,] = useState()\n\n    const dispatch = useDispatch()\n\n    const handleSubmit = ({text}) => {\n        dispatch(actions.UPDATE_TODO.REQUEST({ text, id }, () => {\n            toggleField()\n        }));\n    };\n\n    const toggleField = () => toggleFieldStatus(isInput => !isInput)\n\n    const deleteTodo = () => {\n        dispatch(actions.REMOVE_TODO.REQUEST(id, () => {\n        }))\n    };\n    return (\n        <div className='Todo'>\n            { isInput ?\n                <Formik\n                    {...FORM}\n                    initialValues={\n                        { text }\n                    }\n                    onSubmit={handleSubmit}\n                >\n                    {() => {\n                        return <Form>\n                            <Field type=\"text\" name=\"text\" />\n                        </Form>\n                    }}\n                </Formik>\n                :\n                <div onClick={toggleField}\n                // onChange={changeTodoItem}\n\n                > {text} </div>\n            }\n\n            <div className='DeleteTodo' onClick={deleteTodo}> X </div>\n        </div >\n    );\n};\n\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}