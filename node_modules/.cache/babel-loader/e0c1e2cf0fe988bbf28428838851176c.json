{"ast":null,"code":"import _slicedToArray from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nvar TodoContainer = function TodoContainer(_ref) {\n  var text = _ref.text,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      toggleFieldStatus = _useState2[1]; // const [text,] = useState()\n\n\n  var dispatch = useDispatch();\n\n  var changeTodoItem = function changeTodoItem(text) {\n    dispatch(actions.UPDATE_TODO.REQUEST(text, id, function () {}));\n  };\n\n  var toggleField = function toggleField() {\n    return toggleFieldStatus(function (isInput) {\n      return !isInput;\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    dispatch(actions.REMOVE_TODO.REQUEST(id, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, isInput ? /*#__PURE__*/React.createElement(InputField, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleField // onChange={changeTodoItem}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \" \", text, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeleteTodo\",\n    onClick: deleteTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \" X \"));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useEffect","useState","useDispatch","actions","TodoContainer","text","id","isInput","toggleFieldStatus","dispatch","changeTodoItem","UPDATE_TODO","REQUEST","toggleField","deleteTodo","REMOVE_TODO"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCL,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC7BM,OAD6B;AAAA,MACpBC,iBADoB,kBAEpC;;;AAEA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAGA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAAL,IAAI,EAAI;AAC3BI,IAAAA,QAAQ,CAACN,OAAO,CAACQ,WAAR,CAAoBC,OAApB,CAA4BP,IAA5B,EAAkCC,EAAlC,EAAsC,YAAM,CACpD,CADQ,CAAD,CAAR;AAEH,GAHD;;AAKA,MAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAML,iBAAiB,CAAC,UAAAD,OAAO;AAAA,aAAI,CAACA,OAAL;AAAA,KAAR,CAAvB;AAAA,GAApB;;AAEA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,QAAQ,CAACN,OAAO,CAACY,WAAR,CAAoBH,OAApB,CAA4BN,EAA5B,EAAgC,YAAM,CAC9C,CADQ,CAAD,CAAR;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,OAAO,gBACJ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,gBAGL;AAAK,IAAA,OAAO,EAAEM,WAAd,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGGR,IAHH,MAJR,eAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAES,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVJ,CADJ;AAcH,CAjCD;;AAmCA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\n\nconst TodoContainer = ({ text, id }) => {\n    const [isInput, toggleFieldStatus] = useState(false)\n    // const [text,] = useState()\n\n    const dispatch = useDispatch()\n\n\n    const changeTodoItem = text => {\n        dispatch(actions.UPDATE_TODO.REQUEST(text, id, () => {\n        }))\n    };\n\n    const toggleField = () => toggleFieldStatus(isInput => !isInput)\n\n    const deleteTodo = () => {\n        dispatch(actions.REMOVE_TODO.REQUEST(id, () => {\n        }))\n    };\n\n    return (\n        <div className='Todo'>\n            { isInput ?\n                 <InputField/>\n                :\n                <div onClick={toggleField}\n                // onChange={changeTodoItem}\n\n                > {text} </div>\n            }\n\n            <div className='DeleteTodo' onClick={deleteTodo}> X </div>\n        </div>\n    );\n};\n\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}