{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo as _deleteTodo, editTodo as _editTodo } from \"../../../redux/action/addTodo.action\";\nimport { actions } from \"../../store/actions\";\nexport var TodoContainer = function TodoContainer() {\n  var dispatch = useDispatch();\n\n  var editTodo = function editTodo(data) {\n    dispatch(actions.UPDATE_TODO(data, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return editTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, selected === id ? text : todo), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      return _deleteTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"x\"));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteTodo: function deleteTodo(key) {\n      return dispatch(_deleteTodo(key));\n    },\n    editTodo: function editTodo(key) {\n      return dispatch(_editTodo(key));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var text = _ref.text,\n      selected = _ref.selected;\n  return {\n    text: text,\n    selected: selected\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useDispatch","deleteTodo","editTodo","actions","TodoContainer","dispatch","data","UPDATE_TODO","id","selected","text","todo","cursor","mapDispatchToProps","key","mapStateToProps","connect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,QAAQ,IAARA,SAArB,QAAqC,sCAArC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAEC,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAClC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAI,IAAI,EAAI;AACvBD,IAAAA,QAAQ,CAACF,OAAO,CAACI,WAAR,CAAoBD,IAApB,EAA0B,YAAM,CACxC,CADQ,CAAD,CAAR;AAED,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMJ,QAAQ,CAACM,EAAD,CAAd;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,QAAQ,KAAKD,EAAb,GAAkBE,IAAlB,GAAyBC,IAA5D,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMX,WAAU,CAACO,EAAD,CAAhB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAQD,CAfO;;AAiBR,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAR,QAAQ;AAAA,SAAK;AACtCJ,IAAAA,UAAU,EAAE,oBAAAa,GAAG;AAAA,aAAIT,QAAQ,CAACJ,WAAU,CAACa,GAAD,CAAX,CAAZ;AAAA,KADuB;AAEtCZ,IAAAA,QAAQ,EAAE,kBAAAY,GAAG;AAAA,aAAIT,QAAQ,CAACH,SAAQ,CAACY,GAAD,CAAT,CAAZ;AAAA;AAFyB,GAAL;AAAA,CAAnC;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGL,IAAH,QAAGA,IAAH;AAAA,MAASD,QAAT,QAASA,QAAT;AAAA,SAAyB;AAC/CC,IAAAA,IAAI,EAAJA,IAD+C;AAE/CD,IAAAA,QAAQ,EAARA;AAF+C,GAAzB;AAAA,CAAxB;;AAIA,eAAeO,OAAO,CACpBD,eADoB,EAEpBF,kBAFoB,CAAP,CAGbT,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, editTodo } from \"../../../redux/action/addTodo.action\";\nimport { actions } from \"../../store/actions\";\n\n export const TodoContainer = () => {\n  const dispatch = useDispatch()\n  const editTodo = data => {\n    dispatch(actions.UPDATE_TODO(data, () => {\n    }))\n  };\n  \n  return (\n    <div className='Todo'>\n      <div onClick={() => editTodo(id)}>{selected === id ? text : todo}</div>\n      <div style={{ cursor: \"pointer\" }} onClick={() => deleteTodo(id)}>\n        x\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteTodo: key => dispatch(deleteTodo(key)),\n  editTodo: key => dispatch(editTodo(key))\n});\n\nconst mapStateToProps = ({ text, selected }) => ({\n  text,\n  selected\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoContainer);"]},"metadata":{},"sourceType":"module"}