{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, editTodo } from \"../../../redux/action/addTodo.action\";\nimport { actions } from \"../../store/actions\";\nexport var TodoContainer = function TodoContainer() {\n  var dispatch = useDispatch();\n\n  var editTodo = function editTodo(id) {\n    dispatch(actions.UPDATE_TODO(id, function () {}));\n  };\n\n  var deleteTodo = function deleteTodo(id) {\n    dispatch(actions.REMOVE_TODO(id, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return editTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, selected === id ? text : todo), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: function onClick() {\n      return deleteTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"x\"));\n}; // const mapDispatchToProps = dispatch => ({\n//   deleteTodo: key => dispatch(deleteTodo(key)),\n//   editTodo: key => dispatch(editTodo(key))\n// });\n// const mapStateToProps = ({ text, selected }) => ({\n//   text,\n//   selected\n// });\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(TodoContainer);","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useDispatch","deleteTodo","editTodo","actions","TodoContainer","dispatch","id","UPDATE_TODO","REMOVE_TODO","selected","text","todo","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,sCAArC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAEjC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAI,EAAE,EAAI;AACrBD,IAAAA,QAAQ,CAACF,OAAO,CAACI,WAAR,CAAoBD,EAApB,EAAwB,YAAM,CACtC,CADQ,CAAD,CAAR;AAED,GAHD;;AAIA,MAAML,UAAU,GAAG,SAAbA,UAAa,CAAAK,EAAE,EAAI;AACvBD,IAAAA,QAAQ,CAACF,OAAO,CAACK,WAAR,CAAoBF,EAApB,EAAwB,YAAM,CACtC,CADQ,CAAD,CAAR;AAED,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMJ,QAAQ,CAACI,EAAD,CAAd;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCG,QAAQ,KAAKH,EAAb,GAAkBI,IAAlB,GAAyBC,IAA5D,CADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMX,UAAU,CAACK,EAAD,CAAhB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAQD,CApBM,C,CAsBP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, editTodo } from \"../../../redux/action/addTodo.action\";\nimport { actions } from \"../../store/actions\";\n\nexport const TodoContainer = () => {\n\n  const dispatch = useDispatch()\n  const editTodo = id => {\n    dispatch(actions.UPDATE_TODO(id, () => {\n    }))\n  };\n  const deleteTodo = id => {\n    dispatch(actions.REMOVE_TODO(id, () => {\n    }))\n  };\n\n  return (\n    <div className='Todo'>\n      <div onClick={() => editTodo(id)}>{selected === id ? text : todo}</div>\n      <div style={{ cursor: \"pointer\" }} onClick={() => deleteTodo(id)}>\n        x\n      </div>\n    </div>\n  );\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   deleteTodo: key => dispatch(deleteTodo(key)),\n//   editTodo: key => dispatch(editTodo(key))\n// });\n\n// const mapStateToProps = ({ text, selected }) => ({\n//   text,\n//   selected\n// });\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(TodoContainer);"]},"metadata":{},"sourceType":"module"}