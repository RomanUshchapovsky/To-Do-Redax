{"ast":null,"code":"import _slicedToArray from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\nvar handleChangeTodoItem = function handleChangeTodoItem(text, event) {};\n\nvar TodoContainer = function TodoContainer(_ref) {\n  var text = _ref.text,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      toggleFieldStatus = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var changeTodoItem = function changeTodoItem(todo) {\n    dispatch(actions.UPDATE_TODO.REQUEST(todo, function () {}));\n  };\n\n  var toggleField = function toggleField() {\n    return toggleFieldStatus(function (isInput) {\n      return !isInput;\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    dispatch(actions.REMOVE_TODO.REQUEST(id, function () {}));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleField,\n    onChange: changeTodoItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \" \", text, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: deleteTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \" X \"));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useEffect","useState","useDispatch","actions","handleChangeTodoItem","text","event","TodoContainer","id","isInput","toggleFieldStatus","dispatch","changeTodoItem","todo","UPDATE_TODO","REQUEST","toggleField","deleteTodo","REMOVE_TODO"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,KAAP,EAAiB,CAE7C,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfF,IAAe,QAAfA,IAAe;AAAA,MAATG,EAAS,QAATA,EAAS;;AAAA,kBACCP,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC7BQ,OAD6B;AAAA,MACpBC,iBADoB;;AAGpC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAGA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAC3BF,IAAAA,QAAQ,CAACR,OAAO,CAACW,WAAR,CAAoBC,OAApB,CAA4BF,IAA5B,EAAkC,YAAM,CAChD,CADQ,CAAD,CAAR;AAEH,GAHD;;AAKA,MAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMN,iBAAiB,CAAC,UAAAD,OAAO;AAAA,aAAI,CAACA,OAAL;AAAA,KAAR,CAAvB;AAAA,GAApB;;AAEA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBN,IAAAA,QAAQ,CAACR,OAAO,CAACe,WAAR,CAAoBH,OAApB,CAA4BP,EAA5B,EAAgC,YAAM,CAC9C,CADQ,CAAD,CAAR;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,OAAO,EAAEQ,WAAd;AAA2B,IAAA,QAAQ,EAAEJ,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuDP,IAAvD,MADJ,eAEI;AAAK,IAAA,OAAO,EAAEY,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ;AAMH,CAxBD;;AA0BA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\n\n\nconst handleChangeTodoItem = (text, event) => {\n  \n}  \n\nconst TodoContainer = ({ text, id }) => {\n    const [isInput, toggleFieldStatus] = useState(false)\n\n    const dispatch = useDispatch()\n\n\n    const changeTodoItem = todo => {\n        dispatch(actions.UPDATE_TODO.REQUEST(todo, () => {\n        }))\n    };\n\n    const toggleField = () => toggleFieldStatus(isInput => !isInput)\n\n    const deleteTodo = () => {\n        dispatch(actions.REMOVE_TODO.REQUEST(id, () => {\n        }))\n    };\n\n    return (\n        <div className='Todo'>\n            <div onClick={toggleField} onChange={changeTodoItem}> {text} </div>\n            <div onClick={deleteTodo}> X </div>\n        </div>\n    );\n};\n\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}