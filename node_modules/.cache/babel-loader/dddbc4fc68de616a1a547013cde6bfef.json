{"ast":null,"code":"import _objectSpread from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/InputField/InputField.jsx\";\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { Formik, Form, Field } from 'formik';\nimport { FORM } from '../../constants/formHelper';\nimport { FORM_HELP_TEXT } from '../../constants/messages';\nexport default (function (props) {\n  console.log(props);\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(data, _ref) {\n    var resetForm = _ref.resetForm;\n\n    if (props && props.id) {\n      console.log('data', data);\n      dispatch(actions.UPDATE_TODO.REQUEST(_objectSpread({}, data), function () {\n        return resetForm();\n      }));\n    } else {\n      dispatch(actions.CREATE_TODO.REQUEST(_objectSpread(_objectSpread({}, data), {}, {\n        id: new Date().getTime()\n      }), function () {\n        return resetForm();\n      }));\n    }\n  };\n\n  var setFormikInitialState = function setFormikInitialState() {\n    return props && props.id ? _objectSpread(_objectSpread({}, FORM), {}, {\n      initialValues: _objectSpread({}, props)\n    }) : _objectSpread({}, FORM);\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, Object.assign({\n    onSubmit: handleSubmit\n  }, setFormikInitialState(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), function (props) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"text\",\n      placeholder: FORM_HELP_TEXT.placeholder.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }));\n  });\n});","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/InputField/InputField.jsx"],"names":["React","useDispatch","actions","Formik","Form","Field","FORM","FORM_HELP_TEXT","props","console","log","dispatch","handleSubmit","data","resetForm","id","UPDATE_TODO","REQUEST","CREATE_TODO","Date","getTime","setFormikInitialState","initialValues","placeholder","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,gBAAe,UAAAC,KAAK,EAAI;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAMG,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,QAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AAC5C,QAAKN,KAAK,IAAIA,KAAK,CAACO,EAApB,EAAwB;AACtBN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB;AACAF,MAAAA,QAAQ,CAACT,OAAO,CAACc,WAAR,CAAoBC,OAApB,mBAAiCJ,IAAjC,GAAyC;AAAA,eAAMC,SAAS,EAAf;AAAA,OAAzC,CAAD,CAAR;AACD,KAHD,MAGO;AACLH,MAAAA,QAAQ,CAACT,OAAO,CAACgB,WAAR,CAAoBD,OAApB,iCAAiCJ,IAAjC;AAAuCE,QAAAA,EAAE,EAAE,IAAII,IAAJ,GAAWC,OAAX;AAA3C,UAAmE;AAAA,eAAMN,SAAS,EAAf;AAAA,OAAnE,CAAD,CAAR;AACD;AACF,GAPD;;AASA,MAAMO,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,WAAOb,KAAK,IAAIA,KAAK,CAACO,EAAf,mCAAwBT,IAAxB;AAA8BgB,MAAAA,aAAa,oBAAMd,KAAN;AAA3C,2BAAgEF,IAAhE,CAAP;AACD,GAFD;;AAIA,sBACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEM;AADZ,KAEMS,qBAAqB,EAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIG,UAAAb,KAAK,EAAI;AACR,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAED,cAAc,CAACgB,WAAf,CAA2BC,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD,GARH,CADF;AAYD,CA7BD","sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actions } from \"../../store/actions\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { FORM } from '../../constants/formHelper';\r\nimport { FORM_HELP_TEXT } from '../../constants/messages';\r\n\r\nexport default props => {\r\n  console.log(props);\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (data, { resetForm }) => {\r\n    if ( props && props.id) {\r\n      console.log('data', data)\r\n      dispatch(actions.UPDATE_TODO.REQUEST({ ...data }, () => resetForm()))\r\n    } else {\r\n      dispatch(actions.CREATE_TODO.REQUEST({ ...data, id: new Date().getTime() }, () => resetForm()))\r\n    }\r\n  };\r\n\r\n  const setFormikInitialState = () => {\r\n    return props && props.id ? {...FORM, initialValues: {...props} } : {...FORM}\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={handleSubmit}\r\n      {...setFormikInitialState()}\r\n    >\r\n      {props => {\r\n        return <Form>\r\n          <Field type=\"text\" name=\"text\" placeholder={FORM_HELP_TEXT.placeholder.text} />\r\n        </Form>\r\n      }}\r\n    </Formik>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}