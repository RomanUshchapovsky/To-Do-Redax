{"ast":null,"code":"import _slicedToArray from \"/home/usersmart/Desktop/ToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { actions } from \"../../store/actions\";\nimport { FORM } from '../../constants/formHelper';\n\nvar TodoContainer = function TodoContainer(_ref) {\n  var text = _ref.text,\n      id = _ref.id;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInput = _useState2[0],\n      toggleFieldStatus = _useState2[1]; // const [text,] = useState()\n\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(text) {\n    dispatch(actions.UPDATE_TODO.REQUEST(text, id, function () {}));\n    toggleField();\n  };\n\n  var toggleField = function toggleField() {\n    return toggleFieldStatus(function (isInput) {\n      return !isInput;\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    dispatch(actions.REMOVE_TODO.REQUEST(id, function () {}));\n  };\n\n  console.log('text', text);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, isInput ? /*#__PURE__*/React.createElement(Formik, {\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n    validateOnChange: true // validationSchema={Yup.object().shape({\n    //     text: Yup.string().required(MSG.thisFieldIsRequired)\n    // })}\n    ,\n    initialValues: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, function (props) {\n    console.log(\"props\", props);\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: toggleField // onChange={changeTodoItem}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \" \", text, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeleteTodo\",\n    onClick: deleteTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \" X \"));\n};\n\nexport default TodoContainer;","map":{"version":3,"sources":["/home/usersmart/Desktop/ToDo/src/containers/components/Todo/TodoContainer.jsx"],"names":["React","useEffect","useState","useDispatch","Formik","Form","Field","Yup","actions","FORM","TodoContainer","text","id","isInput","toggleFieldStatus","dispatch","handleSubmit","UPDATE_TODO","REQUEST","toggleField","deleteTodo","REMOVE_TODO","console","log","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCV,QAAQ,CAAC,KAAD,CADT;AAAA;AAAA,MAC7BW,OAD6B;AAAA,MACpBC,iBADoB,kBAEpC;;;AAEA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAGA,MAAMa,YAAY,GAAG,SAAfA,YAAe,CAAAL,IAAI,EAAI;AACzBI,IAAAA,QAAQ,CAACP,OAAO,CAACS,WAAR,CAAoBC,OAApB,CAA4BP,IAA5B,EAAkCC,EAAlC,EAAsC,YAAM,CACpD,CADQ,CAAD,CAAR;AAEAO,IAAAA,WAAW;AACd,GAJD;;AAMA,MAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAML,iBAAiB,CAAC,UAAAD,OAAO;AAAA,aAAI,CAACA,OAAL;AAAA,KAAR,CAAvB;AAAA,GAApB;;AAEA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,QAAQ,CAACP,OAAO,CAACa,WAAR,CAAoBH,OAApB,CAA4BN,EAA5B,EAAgC,YAAM,CAC9C,CADQ,CAAD,CAAR;AAEH,GAHD;;AAIAU,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBZ,IAApB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,OAAO,gBACL,oBAAC,MAAD;AACI,IAAA,QAAQ,EAAEG,YADd;AAEI,IAAA,kBAAkB,EAAE,IAFxB;AAGI,IAAA,gBAAgB,EAAE,IAHtB,CAII;AACA;AACA;AANJ;AAOI,IAAA,aAAa,EACTL,IARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWK,UAACa,KAAD,EAAW;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAGH,GAhBL,CADK,gBAoBL;AAAK,IAAA,OAAO,EAAEL,WAAd,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGGR,IAHH,MArBR,eA2BI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAES,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA3BJ,CADJ;AA+BH,CAnDD;;AAqDA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { actions } from \"../../store/actions\";\nimport { FORM } from '../../constants/formHelper';\n\n\nconst TodoContainer = ({ text, id }) => {\n    const [isInput, toggleFieldStatus] = useState(false)\n    // const [text,] = useState()\n\n    const dispatch = useDispatch()\n\n\n    const handleSubmit = text => {\n        dispatch(actions.UPDATE_TODO.REQUEST(text, id, () => {\n        }));\n        toggleField();\n    };\n\n    const toggleField = () => toggleFieldStatus(isInput => !isInput)\n\n    const deleteTodo = () => {\n        dispatch(actions.REMOVE_TODO.REQUEST(id, () => {\n        }))\n    };\n    console.log('text', text);\n    return (\n        <div className='Todo'>\n            { isInput ?\n                <Formik\n                    onSubmit={handleSubmit}\n                    enableReinitialize={true}\n                    validateOnChange={true}\n                    // validationSchema={Yup.object().shape({\n                    //     text: Yup.string().required(MSG.thisFieldIsRequired)\n                    // })}\n                    initialValues={\n                        text\n                    }\n                >\n                    {(props) => {\n                        console.log(\"props\", props);\n                        return <Form>\n                            <Field type=\"text\" name=\"text\" />\n                        </Form>\n                    }}\n                </Formik>\n                :\n                <div onClick={toggleField}\n                // onChange={changeTodoItem}\n\n                > {text} </div>\n            }\n\n            <div className='DeleteTodo' onClick={deleteTodo}> X </div>\n        </div >\n    );\n};\n\nexport default TodoContainer"]},"metadata":{},"sourceType":"module"}